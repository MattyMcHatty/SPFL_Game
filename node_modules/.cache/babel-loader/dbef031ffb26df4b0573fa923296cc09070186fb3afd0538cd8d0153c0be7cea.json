{"ast":null,"code":"import { combineReducers } from 'redux';\n\n// Example reducer\nconst initialState = {\n  count: 0\n};\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        ...state,\n        count: state.count + 1\n      };\n    case 'DECREMENT':\n      return {\n        ...state,\n        count: state.count - 1\n      };\n    default:\n      return state;\n  }\n};\n\n// Combine all reducers\nconst rootReducer = combineReducers({\n  counter: counterReducer\n  // Add other reducers here\n});\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","initialState","count","counterReducer","state","action","type","rootReducer","counter"],"sources":["C:/Users/virtu/Documents/SPL Game/my-react-redux-app/src/store/reducers.ts"],"sourcesContent":["import { combineReducers } from 'redux';\n\n// Example reducer\nconst initialState = {\n    count: 0,\n};\n\nconst counterReducer = (state = initialState, action: any) => {\n    switch (action.type) {\n        case 'INCREMENT':\n            return { ...state, count: state.count + 1 };\n        case 'DECREMENT':\n            return { ...state, count: state.count - 1 };\n        default:\n            return state;\n    }\n};\n\n// Combine all reducers\nconst rootReducer = combineReducers({\n    counter: counterReducer,\n    // Add other reducers here\n});\n\nexport default rootReducer;"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;;AAEvC;AACA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAW,KAAK;EAC1D,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,WAAW;MACZ,OAAO;QAAE,GAAGF,KAAK;QAAEF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAG;MAAE,CAAC;IAC/C,KAAK,WAAW;MACZ,OAAO;QAAE,GAAGE,KAAK;QAAEF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAG;MAAE,CAAC;IAC/C;MACI,OAAOE,KAAK;EACpB;AACJ,CAAC;;AAED;AACA,MAAMG,WAAW,GAAGP,eAAe,CAAC;EAChCQ,OAAO,EAAEL;EACT;AACJ,CAAC,CAAC;AAEF,eAAeI,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}